name: Lint and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for PR diff

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Install pre-commit hooks
      run: |
        pre-commit install

    - name: Get changed files
      id: changed-files
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          # For PRs, get files changed in the PR
          git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
        else
          # For pushes, get files changed in the last commit
          git diff --name-only HEAD~1 HEAD > changed_files.txt
        fi
        echo "Changed files:"
        cat changed_files.txt

    - name: Run pre-commit hooks on changed files
      run: |
        if [ -s changed_files.txt ]; then
          # Run pre-commit only on changed files
          pre-commit run --files $(cat changed_files.txt | tr '\n' ' ')
        else
          echo "No files changed, skipping pre-commit hooks"
        fi

    - name: Run linting checks on changed files
      run: |
        if [ -s changed_files.txt ]; then
          # Filter to only Python files
          grep '\.py$' changed_files.txt > python_files.txt || true
          if [ -s python_files.txt ]; then
            echo "Running linting on changed Python files:"
            cat python_files.txt
            # Run black check on changed files
            black --check --diff $(cat python_files.txt | tr '\n' ' ') || true
            # Run isort check on changed files
            isort --check-only --diff $(cat python_files.txt | tr '\n' ' ') || true
            # Run flake8 on changed files
            flake8 $(cat python_files.txt | tr '\n' ' ') --max-line-length=88 || true
          else
            echo "No Python files changed, skipping linting"
          fi
        else
          echo "No files changed, skipping linting"
        fi

    - name: Run type checking on changed files
      run: |
        if [ -s changed_files.txt ]; then
          # Filter to only Python files in app/ directory
          grep '^app/.*\.py$' changed_files.txt > app_python_files.txt || true
          if [ -s app_python_files.txt ]; then
            echo "Running type checking on changed app files:"
            cat app_python_files.txt
            mypy $(cat app_python_files.txt | tr '\n' ' ') --ignore-missing-imports || true
          else
            echo "No app Python files changed, skipping type checking"
          fi
        else
          echo "No files changed, skipping type checking"
        fi

    - name: Run security checks on changed files
      run: |
        if [ -s changed_files.txt ]; then
          # Filter to only Python files
          grep '\.py$' changed_files.txt > python_files.txt || true
          if [ -s python_files.txt ]; then
            echo "Running security checks on changed Python files:"
            cat python_files.txt
            # Run bandit on changed files
            bandit -f json -o bandit-report.json --exclude tests/,migrations/,venv/,.venv/ $(cat python_files.txt | tr '\n' ' ') || true
            # Run safety check (dependency vulnerability check)
            safety check || true
          else
            echo "No Python files changed, skipping security checks"
          fi
        else
          echo "No files changed, skipping security checks"
        fi

    - name: Run tests
      run: |
        make test-cov

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./htmlcov/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
